using System;
using System.Drawing;
using System.Windows.Forms;
using System.IO;
using AForge.Video;
using AForge.Video.DirectShow;

namespace EVEDRI1
{
    public partial class Form3 : Form
    {
        private PictureBox pictureBox;
        private Button browseButton;
        private Button cameraButton;
        private OpenFileDialog openFileDialog;
        private VideoCaptureDevice videoSource;
        private FilterInfoCollection filterInfoCollection;

        public Form3()
        {
            InitializeComponent(); // Use the designer-generated InitializeComponent
            InitializeUI();
            InitializeCamera();
        }

        // Remove the manually created InitializeComponent()
        // It should be generated by the designer.

        private void InitializeUI()
        {
            pictureBox = new PictureBox
            {
                Dock = DockStyle.Fill,
                SizeMode = PictureBoxSizeMode.Zoom
            };
            this.Controls.Add(pictureBox);

            browseButton = new Button
            {
                Text = "Browse",
                Dock = DockStyle.Top,
                Height = 60,
                BackColor = Color.Yellow

            };
            browseButton.Click += BrowseButton_Click;
            this.Controls.Add(browseButton);

            cameraButton = new Button
            {
                Text = "Camera",
                Dock = DockStyle.Top,
                Height = 60,
                BackColor = Color.Yellow
            };
            cameraButton.Click += CameraButton_Click;
            this.Controls.Add(cameraButton);

            openFileDialog = new OpenFileDialog
            {
                Filter = "Image Files (*.bmp;*.jpg;*.jpeg;*.png)|*.bmp;*.jpg;*.jpeg;*.png|All files (*.*)|*.*",
                FilterIndex = 1,
                RestoreDirectory = true
            };
        }

        private void InitializeCamera()
        {
            try
            {
                filterInfoCollection = new FilterInfoCollection(FilterCategory.VideoInputDevice);
                if (filterInfoCollection.Count == 0)
                {
                    cameraButton.Enabled = false;
                    MessageBox.Show("No camera devices found.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            catch (ApplicationException ex)
            {
                MessageBox.Show("Error accessing camera devices: " + ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                cameraButton.Enabled = false;
            }
        }

        private void BrowseButton_Click(object sender, EventArgs e)
        {
            if (openFileDialog.ShowDialog() == DialogResult.OK)
            {
                try
                {
                    pictureBox.Image = Image.FromFile(openFileDialog.FileName);
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Error loading image: " + ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private void CameraButton_Click(object sender, EventArgs e)
        {
            if (filterInfoCollection.Count > 0)
            {
                if (videoSource == null || !videoSource.IsRunning)
                {
                    videoSource = new VideoCaptureDevice(filterInfoCollection[0].MonikerString);
                    videoSource.NewFrame += VideoSource_NewFrame;
                    videoSource.Start();
                    cameraButton.Text = "Stop Camera";
                }
                else
                {
                    StopCamera();
                }
            }
        }

        private void VideoSource_NewFrame(object sender, NewFrameEventArgs eventArgs)
        {
            try
            {
                pictureBox.Image = (Bitmap)eventArgs.Frame.Clone();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error displaying camera frame: " + ex.Message);
            }
        }

        private void StopCamera()
        {
            if (videoSource != null && videoSource.IsRunning)
            {
                videoSource.SignalToStop();
                videoSource.NewFrame -= VideoSource_NewFrame;
                videoSource.WaitForStop();
                videoSource = null;
                pictureBox.Image = null;
                cameraButton.Text = "Camera";
            }
        }

        protected override void OnFormClosing(FormClosingEventArgs e)
        {
            base.OnFormClosing(e);
            StopCamera();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            // Your button1 click handler
        }

        private void Form3_Load(object sender, EventArgs e)
        {

        }
    }
}